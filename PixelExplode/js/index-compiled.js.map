{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Created by josh on 06/07/2016.\n */\n\nConstants = {};\n\nConstants.FLOAT_SIZE_BYTES        = 4;\nConstants.INT_SIZE_BYTES          = 4;\nConstants.SHORT_SIZE_BYTES        = 2;\n\nConstants.UNIFORM_PROJECTION_MAT  = \"uPMatrix\";\nConstants.UNIFORM_MODELVIEW_MAT   = \"uMVMatrix\";\nConstants.UNIFORM_NORMAL          = \"uNormalMatrix\";\nConstants.UNIFORM_SAMPLER_0       = \"uSampler\";\n\nvar engine;\n\ndocument.addEventListener(\"DOMContentLoaded\", init, false);\n\nfunction init(){\n    engine = new Engine(document.getElementById(\"canvas\"));\n    engine.start();\n}\n\nfunction getTextFromElement(elementId){\n    var str = \"\";\n    var elem = document.getElementById(elementId);\n    var k = elem.firstChild;\n    while (k) {\n        if (k.nodeType == 3) {\n            str += k.textContent;\n        }\n        k = k.nextSibling;\n    }\n\n    return str;\n}\n\nclass Engine{\n\n    constructor(canvas){\n        this.canvas = canvas;\n        this.gl = null;\n\n        this.textureImage = null;\n\n        this.running = false;\n        this.lastUpdateTimestamp = 0;\n\n        this.camera = new Camera(\"camera\");\n        this.camera.move(0,0,850);\n        this.camera.type = CameraType.Perspective;\n        this.models = [];\n\n        this.force = 10.0;\n        this.radius = 20;\n\n        this.targetPositions = [\n            [0, -100, 0],\n            [0, 0, 0],\n            [0, 100, 0],\n        ]\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n        this.onDrop = this.onDrop.bind(this);\n        this.onCancelDrag = this.onCancelDrag.bind(this);\n        this.onFileUploaded = this.onFileUploaded.bind(this);\n\n        window.addEventListener('dragover', this.onCancelDrag, false);\n        window.addEventListener('dragenter', this.onCancelDrag, false);\n        window.addEventListener('dragexit', this.onCancelDrag, false);\n        window.addEventListener('drop', this.onDrop, false);\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"orientationchange\", this.onOrientationChange);\n\n        this._init3D();\n\n        this.orbit = 0.0;\n    }\n\n    _init3D(){\n        try {\n            this.gl = this.canvas.getContext(\"experimental-webgl\");\n        }\n        catch (e) {\n            console.log(\"ERROR \" + e);\n        }\n\n        if (!this.gl) {\n            throw new Error(\"WebGL not supported\");\n        }\n\n        this.onResize();\n\n        this.createParticles();\n\n        return this.gl;\n    }\n\n    _initViewport(){\n        this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    start(){\n        this.lastUpdateTimestamp = Date.now();\n        this.running = true;\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    stop(){\n        this.running = false;\n    }\n\n    onAnimationFrame(){\n        if(!this.running){\n            return;\n        }\n\n        var elapsedTime = Date.now() - this.lastUpdateTimestamp;\n        this.lastUpdateTimestamp = Date.now();\n\n        elapsedTime /= 1000; // elapsedTime in ms\n\n        this.onUpdate(elapsedTime);\n        this.onRender();\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    onUpdate(et){\n\n        this.camera.update(et);\n\n        for(var i=0; i<this.models.length; i++){\n            var model = this.models[i];\n\n            if(model.tag == \"particles\"){\n                this.updateParticles(et, model.mesh);\n                //model.rotate(0,et * 0.1, 0);\n            }\n\n            model.update(et);\n        }\n    }\n\n    onRender(){\n        // Clear the canvas\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\n\n        // Clear the color buffer bit\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n        // Enable the depth test\n        this.gl.enable(this.gl.DEPTH_TEST);\n        this.gl.enable(this.gl.BLEND);\n\n        this.gl.depthFunc(this.gl.LESS);\n        this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE);\n\n        for(var i=0; i<this.models.length; i++){\n            this.models[i].draw(this.gl, this.camera);\n        }\n    }\n\n    onCancelDrag(event){\n        if(event.preventDefault)\n            event.preventDefault();\n\n        return false;\n    }\n\n    onDrop(evt){\n        event.stopPropagation();\n        event.preventDefault();\n\n        // query what was dropped\n        var files = event.dataTransfer.files;\n\n        // if we have something\n        if(files.length) {\n            var file = files[0];\n            var fileReader = new FileReader();\n            fileReader.onloadend = this.onFileUploaded;\n            fileReader.readAsDataURL(file);\n        }\n\n        return false;\n    }\n    onFileUploaded(event){\n        if(event.target.result.match(/^data:image/)){\n\n            if(this.textureImage != null){\n                // TODO: remove previous information\n            }\n\n            var imageSrc = event.target.result;\n            this.textureImage = document.createElement(\"img\");\n            this.textureImage.src = imageSrc;\n\n            this.createParticles(this.textureImage);\n        }\n    }\n\n    updateParticles(et, mesh){\n\n        for(var i=0; i<mesh.vertexData.length; i+= mesh.stride){\n            //debugger;\n\n            var x = mesh.vertexData[i];\n            var y = mesh.vertexData[i+1];\n            var z = mesh.vertexData[i+2];\n\n            var r = mesh.vertexData[i+3];\n            var g = mesh.vertexData[i+4];\n            var b = mesh.vertexData[i+5];\n            var a = mesh.vertexData[i+6];\n\n            var size = mesh.vertexData[i+7];\n\n            var targetIndex = 0;\n            if(r > g && r > b){\n                targetIndex = 0;\n            } else if( g > r && g > b){\n                targetIndex = 1;\n            } else{\n                targetIndex = 2;\n            }\n\n            var targetPosition = this.targetPositions[targetIndex];\n            var tx = targetPosition[0];\n            var ty = targetPosition[1];\n            var tz = targetPosition[2];\n\n            var source = vec3.create([x, y, z]);\n            var target = vec3.create([tx, ty, tz]);\n            var diff = vec3.create();\n            vec3.subtract(target, source, diff);\n            var dis = vec3.length(diff);\n            if(dis > this.radius){\n                var dir = vec3.create();\n                vec3.normalize(diff, dir);\n\n                mesh.vertexData[i] += this.force * et * dir[0];\n                mesh.vertexData[i+1] += this.force * et * dir[1];\n                mesh.vertexData[i+2] += this.force * et * dir[2];\n            }\n        }\n\n        mesh.setVertexBuffer(this.gl);\n    }\n\n    createParticles(image){\n        if(image == null){\n            return;\n        }\n\n        var padding = Math.max(this.canvas.width * 0.1, this.canvas.height * 0.1) * 2;\n\n        var ratio = 1. / Math.max(image.width/(this.canvas.width-padding), image.height/(this.canvas.height-padding));\n        var scaledWidth = image.width * ratio;\n        var scaledHeight = image.height * ratio;\n\n        var tmpCanvas = document.createElement('canvas');\n        tmpCanvas.width = scaledWidth;\n        tmpCanvas.height = scaledHeight;\n\n        console.log(\"ratio \" + ratio + \", scaledWidth \" + scaledWidth + \", scaledheight\" + scaledHeight);\n\n        var tmpContext = tmpCanvas.getContext(\"2d\");\n        tmpContext.drawImage(\n            image,\n            0,0, tmpCanvas.width,tmpCanvas.height);\n\n        var pixels = tmpContext.getImageData(0, 0, tmpCanvas.width, tmpCanvas.height);\n        var step = 5.;\n        var density = step * 0.7;\n        var x = 0, y = 0;\n\n        var ox = -tmpCanvas.width / 2;\n        var oy = -tmpCanvas.height / 2;\n\n        var mesh = new Mesh(\"particles\");\n        mesh.addVertextDefinition(\"vertexPosition\", 3, this.gl.FLOAT);\n        mesh.addVertextDefinition(\"vertexColour\", 4, this.gl.FLOAT);\n        mesh.addVertextDefinition(\"pointSize\", 1, this.gl.FLOAT);\n\n        for(y=0; y<tmpCanvas.height; y += step){\n            for(x=0; x<tmpCanvas.width; x += step){\n\n                var flippedY = tmpCanvas.height - y;\n                var pixelIndex = ((flippedY * tmpCanvas.width) + x) * 4;\n\n                if(pixels.data[pixelIndex + 3] > 0 || true){\n                    // add particle position\n                    mesh.vertexData.push(ox + x); // x\n                    mesh.vertexData.push(oy + y); // y\n                    mesh.vertexData.push(0.0); // z\n\n                    mesh.vertexData.push(pixels.data[pixelIndex] / 255.0); // r\n                    mesh.vertexData.push(pixels.data[pixelIndex + 1] / 255.0); // g\n                    mesh.vertexData.push(pixels.data[pixelIndex + 2] / 255.0); // b\n                    mesh.vertexData.push(pixels.data[pixelIndex + 3] / 255.0); // a\n\n                    mesh.vertexData.push(density); // pixel size\n                }\n            }\n        }\n\n        mesh.setVertexBuffer(this.gl);\n\n        mesh = mesh;\n\n        var shader = new Shader(\n            getTextFromElement(\"vertex_shader\"),\n            getTextFromElement(\"fragment_shader\")\n        )\n\n        shader.load(this.gl);\n\n        var material = new Material(\"material\", shader);\n        var texture = Texture.createTexture(this.gl, \"particle_tex\", \"images/particle.png\");\n        var model = new Model(\"particles\", mesh, material, texture);\n        this.models.push(model);\n    }\n\n    onOrientationChange(){\n        this.onResize();\n    }\n\n    onResize(){\n        this.canvas.width = document.width | document.body.clientWidth;\n        this.canvas.height = document.height | document.body.clientHeight;\n\n        this.camera.setViewSize(this.canvas.width, this.canvas.height);\n\n        this._initViewport();\n    }\n}\n\nconst CameraType = {\n    Perspective     : 0,\n    Orthorgrpahic   : 1\n}\n\nclass Material{\n\n    constructor(tag, shader){\n        this.tag = tag;\n        this.shader = shader;\n\n        this.texture = null;\n\n        this.projectionMatrix = mat4.create();\n        this.viewMatrix = mat4.create();\n        this.modelMatrix = mat4.create();\n\n        this._modelViewMatrix = mat4.create();\n        this._modelViewProjectionMatrix = mat4.create();\n        this._normalMatrix = mat4.create();\n    }\n\n    draw(gl, mesh){\n        var program = this.shader.program;\n\n        this.shader.activate(gl);\n\n        this.initMatrixUniforms(gl, program);\n        this.initTextureUniforms(gl, program);\n\n        mesh.draw(gl, program);\n\n        this.shader.deactivate(gl);\n    }\n\n    initMatrixUniforms(gl, program){\n        mat4.multiply(this.viewMatrix, this.modelMatrix, this._modelViewMatrix);\n        mat4.multiply(this.projectionMatrix, this._modelViewMatrix, this._modelViewProjectionMatrix);\n\n        mat4.identity(this._normalMatrix);\n        mat4.set(this._modelViewMatrix, this._normalMatrix);\n        mat4.inverse(this._normalMatrix);\n        mat4.transpose(this._normalMatrix);\n\n        // projection matrix\n        var pMatrixPtr = gl.getUniformLocation(program, Constants.UNIFORM_PROJECTION_MAT);\n        if( pMatrixPtr != -1 ){\n            gl.uniformMatrix4fv(pMatrixPtr, false, this.projectionMatrix);\n        }\n\n        // model view matrix\n        var mvMatrixPtr = gl.getUniformLocation(program, Constants.UNIFORM_MODELVIEW_MAT);\n        if( mvMatrixPtr != -1 ){\n            gl.uniformMatrix4fv(mvMatrixPtr, false, this._modelViewMatrix);\n        }\n\n        // normal matrix\n        var normalMatrixPtr = gl.getUniformLocation(program, Constants.UNIFORM_NORMAL);\n        if( normalMatrixPtr != -1 ){\n            gl.uniformMatrix4fv(normalMatrixPtr, false, this._normalMatrix);\n        }\n    }\n\n    initTextureUniforms(gl, program){\n        if( this.texture != null && this.texture.loaded){\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, this.texture._textureId);\n            var samplerPtr = gl.getUniformLocation(program, Constants.UNIFORM_SAMPLER_0);\n            if( samplerPtr != -1 ){\n                gl.uniform1i(samplerPtr, 0);\n            }\n\n        }\n    }\n}\n\nclass Transform{\n\n    constructor(tag){\n        this.tag = tag;\n\n        this.position = vec3.create();\n        this.rotation = vec3.create()\n        this.scale = vec3.create();\n        this.scale[0] = this.scale[1] = this.scale[2] = 1;\n        this.modelMatrix = mat4.create();\n\n        mat4.identity(this.modelMatrix);\n    }\n\n    setPosition(x, y, z){\n        this.position[0] = x;\n        this.position[1] = y;\n        this.position[2] = z;\n    }\n\n    move(dx, dy, dz){\n        this.position[0] += dx;\n        this.position[1] += dy;\n        this.position[2] += dz;\n    }\n\n    setRotation(x, y, z){\n        this.rotation[0] = x;\n        this.rotation[1] = y;\n        this.rotation[2] = z;\n    }\n\n    rotate(dx, dy, dz){\n        this.rotation[0] += dx;\n        this.rotation[1] += dy;\n        this.rotation[2] += dz;\n    }\n\n    setUnfiformScale(s){\n        this.scale[0] = s;\n        this.scale[1] = s;\n        this.scale[2] = s;\n    }\n\n    getModelMatrix(){\n        return this.modelMatrix;\n    }\n\n    updateModelMatrix(){\n        mat4.identity(this.modelMatrix);\n\n        mat4.translate(this.modelMatrix, this.position, this.modelMatrix);\n\n        mat4.rotateX(this.modelMatrix, this.rotation[0]);\n        mat4.rotateY(this.modelMatrix, this.rotation[1]);\n        mat4.rotateZ(this.modelMatrix, this.rotation[2]);\n\n        mat4.scale(this.modelMatrix, this.scale, this.modelMatrix);\n    }\n\n    update(dt){\n\n    }\n}\n\nclass Camera extends Transform{\n\n    constructor(tag){\n        super(tag);\n\n        this.viewWidth = 0;\n        this.viewHeight = 0;\n\n        // perspective properties\n        this.fov = 45.0;\n        this._near = 0.01;\n        this._far = 10000;\n\n        this.orthScale = 1.0;\n\n        this.viewMatrix = mat4.create();\n        mat4.identity(this.viewMatrix);\n\n        this.projectionMatrix = mat4.create();\n        mat4.identity(this.projectionMatrix);\n\n        this.type = CameraType.Perspective;\n\n        this.viewProjectionMatrix = mat4.create();\n        mat4.identity(this.viewProjectionMatrix);\n\n        this.invertedViewProjectionMatrix = mat4.create();\n        mat4.identity(this.invertedViewProjectionMatrix);\n    }\n\n    update(dt){\n        super.update(dt);\n\n        this.updateModelMatrix();\n\n        mat4.identity(this.viewMatrix);\n        mat4.inverse(this.modelMatrix, this.viewMatrix);\n\n\n        mat4.identity(this.viewProjectionMatrix);\n        mat4.identity(this.invertedViewProjectionMatrix);\n\n        mat4.multiply(this.projectionMatrix, this.viewMatrix, this.viewProjectionMatrix);\n        mat4.inverse(this.viewProjectionMatrix, this.invertedViewProjectionMatrix);\n    }\n\n    setViewSize(viewWidth, viewHeight){\n        this.viewWidth = viewWidth;\n        this.viewHeight = viewHeight;\n\n        if( this.type == CameraType.Perspective ){\n            console.log( \"Camera setting up projection matrix ; fov \" + this.fov + \", viewWidth \" + this.viewWidth + \", viewHeight \" + this.viewHeight );\n            this.projectionMatrix = mat4.perspective(this.fov, this.viewWidth / this.viewHeight, this._near, this._far);\n        } else{\n            console.log( \"Camera setting up orthographic matrix ; viewWidth \" + this.viewWidth + \", viewHeight \" + this.viewHeight );\n            var aspectRatio = viewWidth > viewHeight ? parseFloat(viewWidth) / parseFloat(viewHeight) : parseFloat(viewHeight) / parseFloat(viewWidth);\n\n            if( viewWidth > viewHeight ){\n                this.projectionMatrix = mat4.ortho(-aspectRatio * this.orthScale,\n                    aspectRatio * this.orthScale,\n                    -1.0 * this.orthScale,\n                    1.0 * this.orthScale,\n                    this._near,\n                    this._far);\n            } else{\n                this.projectionMatrix = mat4.ortho(\n                    -1.0 * this.orthScale,\n                    1.0 * this.orthScale,\n                    -aspectRatio * this.orthScale,\n                    aspectRatio * this.orthScale,\n                    this._near,\n                    this._far);\n            }\n        }\n    }\n}\n\nclass Model extends Transform{\n\n    constructor(tag, mesh, material, texture){\n        super(tag);\n\n        this.mesh = mesh;\n        this.material = material;\n        this.texture = texture;\n    }\n\n    update(dt){\n        if(!this.isReady){\n            return;\n        }\n\n        super.update(dt);\n\n        this.updateModelMatrix();\n    }\n\n    draw(gl, camera){\n        if(!this.isReady){\n            return;\n        }\n\n        mat4.set(camera.projectionMatrix, this.material.projectionMatrix);\n        mat4.set(camera.viewMatrix, this.material.viewMatrix);\n\n        this.material.texture = this.texture;\n\n        mat4.set(this.modelMatrix, this.material.modelMatrix);\n\n        this.material.draw(gl, this.mesh);\n    }\n\n    get isReady(){\n        return (this.mesh != null) &&\n            (this.material != null) &&\n            (this.texture == null || (this.texture.loaded && this.texture._textureId != -1))\n    }\n}\n\nclass Texture{\n\n    static createTexture(gl, tag, imageSource){\n        var tex = new Texture(tag);\n        tex.loadTexture(gl, imageSource);\n        return tex;\n    }\n\n    constructor(tag){\n        this.tag = tag;\n        this._imageSource;\n        this._textureId = -1;\n        this.loaded = false;\n    }\n\n    loadTexture(gl, imageSource){\n        this._imageSource = imageSource;\n        this._image = new Image();\n\n        var instance = this;\n        this._image.onload = function(){\n            instance._onImageLoaded(gl);\n        }\n        this._image.onerror = function(){\n            instance._onImageError();\n        }\n\n        this._image.src = this._imageSource;\n    }\n\n    _onImageLoaded(gl){\n        if(this._textureId == -1){\n            this._textureId = gl.createTexture();\n        }\n        // bind the texture\n        gl.bindTexture(gl.TEXTURE_2D, this._textureId);\n        //gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n        // load the image into OpenGL\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._image);\n        // set texture properties\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_NEAREST);\n        // gl.generateMipmap(gl.TEXTURE_2D);\n\n        //gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        //gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        // unbind texture\n        gl.bindTexture(gl.TEXTURE_2D, null);\n\n        this.loaded = true;\n    }\n\n    _onImageError(gl){\n        console.error(\"Error loading image for texture\");\n    }\n}\n\nclass VertexDefinition{\n\n    constructor(attribute, count, type, offset){\n        this.attribute = attribute;\n        this.count = count;\n        this.type = type;\n        this.offset = offset;\n    }\n}\n\nclass Mesh{\n\n    constructor(tag){\n        this.tag = tag;\n\n        this.vertexBufferStride = 0;\n\n        this.vertexDefinitions = [];\n        this.vertexData = [];\n        this.vertexBuffer = -1;\n    }\n\n    get vertexCount() {\n        var count = 0;\n\n        this.vertexDefinitions.forEach(function(element, index, array){\n            count += element.count;\n        });\n\n        return this.vertexData.length/count;\n    }\n\n    get stride() {\n        var count = 0;\n\n        this.vertexDefinitions.forEach(function(element, index, array){\n            count += element.count;\n        });\n\n        return count;\n    }\n\n\n    addVertextDefinition(attribute, count, type){\n        var offsetCount = 0;\n        for( var i=0; i<this.vertexDefinitions.length; i++ ){\n            offsetCount += this.vertexDefinitions[i].count;\n        }\n\n        var offset = offsetCount * Constants.FLOAT_SIZE_BYTES;\n\n        this.vertexBufferStride = (offsetCount + count) * Constants.FLOAT_SIZE_BYTES;\n\n        this.vertexDefinitions.push(new VertexDefinition(attribute, count, type, offset))\n    }\n\n    setVertexBuffer(gl){\n\n        if(this.vertexBuffer == -1){\n            this.vertexBuffer = gl.createBuffer();\n        }\n\n        //Bind appropriate array buffer to it\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n        // Pass the vertex data to the buffer\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertexData), gl.STATIC_DRAW);\n\n        // unbind\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n\n    draw(gl, program){\n        // bind\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n\n        // enable each attribute\n        for( var i=0; i<this.vertexDefinitions.length; i++ ){\n            var vd = this.vertexDefinitions[i];\n            var attrPtr = gl.getAttribLocation(program, vd.attribute);\n\n            if( attrPtr == -1 ){\n                console.error(\"Mesh.draw - error while trying to bind attributes; missing \" + vd.attribute );\n            } else{\n                gl.enableVertexAttribArray(attrPtr);\n                gl.vertexAttribPointer(attrPtr, vd.count, vd.type, false, this.vertexBufferStride, vd.offset);\n            }\n        }\n\n        // draw\n        gl.drawArrays(gl.POINTS, 0, this.vertexCount);\n\n        // unbind attributes\n        for( var i=0; i<this.vertexDefinitions.length; i++ ){\n            var vd = this.vertexDefinitions[i];\n            var attrPtr = gl.getAttribLocation(program, vd.attribute);\n\n            if( attrPtr == -1 ){\n                //console.error(\"Mesh.draw - error while trying to bind attributes; missing \" + vd.attribute );\n            } else{\n                gl.disableVertexAttribArray(attrPtr);\n            }\n        }\n\n        // UNBIND\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    }\n\n}\n\nclass Shader{\n\n    constructor(vsSource, fsSource){\n        this.vsSource = vsSource;\n        this.fsSource = fsSource;\n\n        this.program = -1;\n        this._vertexShader;\n        this._fragmentShader;\n    }\n\n    load(gl){\n        this._vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        this._fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n\n        gl.shaderSource(this._vertexShader, this.vsSource);\n        gl.shaderSource(this._fragmentShader, this.fsSource);\n\n        this.compile(gl);\n        this.createProgram(gl);\n    }\n\n    compile(gl){\n        gl.compileShader(this._vertexShader);\n        if (!gl.getShaderParameter(this._vertexShader, gl.COMPILE_STATUS)) {\n            console.log( \"ERROR :: Error compiling vertex shader: \" + gl.getShaderInfoLog(this._vertexShader));\n            return false;\n        }\n        gl.compileShader(this._fragmentShader);\n        if (!gl.getShaderParameter(this._fragmentShader, gl.COMPILE_STATUS)) {\n            console.log( \"ERROR :: Error compiling fragment shader: \" + gl.getShaderInfoLog(this._fragmentShader));\n            return false;\n        }\n\n        return true;\n    }\n\n    createProgram(gl){\n        this.program = gl.createProgram();\n\n        gl.attachShader(this.program, this._vertexShader);\n        gl.attachShader(this.program, this._fragmentShader);\n\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            console.log(\"ERROR :: Unable to initialize the shader program.\");\n            return false;\n        }\n\n        return true;\n    }\n\n    activate(gl){\n        gl.useProgram(this.program);\n    }\n\n    deactivate(gl){\n        gl.useProgram(null);\n    }\n\n    dispose(gl){\n        this.use(gl);\n\n        gl.detachShader(this.program, this._vertexShader);\n        gl.detachShader(this.program, this._fragmentShader);\n\n        gl.deleteShader(this._vertexShader);\n        gl.deleteShader(this._fragmentShader);\n\n        gl.deleteProgram(this.program);\n\n        this.program = 0;\n\n        this.use(gl);\n    }\n}"]}