{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Created by josh on 16/08/2016.\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", init, false);\n\nvar renderer;\nvar usService;\n\nfunction log(message){\n    document.getElementById(\"output\").innerHTML = message + \"<br/>\" + document.getElementById(\"output\").innerHTML;\n}\n\nfunction mapRange(value, istart, istop, ostart, ostop){\n    return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));\n}\n\nfunction init(){\n    renderer = new Renderer(document.getElementById(\"canvas\"));\n    usService = new UltrasonicService(renderer);\n    renderer.onResize();\n    renderer.start();\n}\n\nclass UltrasonicService{\n\n    constructor(listener){\n        this.listener = listener;\n\n        this.socket = io.connect('http://' + document.domain + ':' + location.port + \"/sense\");\n        this.socket.on('connect', function() {\n            log(\"connected\");\n            listener.onConnected();\n        });\n\n        this.socket.on('disconnect', function() {\n            log(\"disconnected\");\n            listener.onDisconnected();\n        });\n\n        this.socket.on('message', function(message) {\n            log(\"message \" + message.data);\n            listener.onMessageReceived(message.data);\n        });\n        this.socket.on('reading', function(message) {\n            listener.onReadingReceived(message.data);\n        });\n    }\n\n    poll(){\n        this.socket.emit(\"reading\", {});\n    }\n}\n\nclass Renderer{\n\n    constructor(canvas){\n        this.canvas = canvas;\n        this.context = canvas.getContext(\"2d\");\n\n        this.context.mozImageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n        this.context.imageSmoothingEnabled = false;\n\n        this.running = false;\n        this.lastUpdateTimestamp = 0;\n\n        this.dirty = true;\n\n        this.maxDistance = 200.0;\n        this.minDistance = 5.0;\n        this.timeSincePolledDistance = 0;\n        this.targetDistance = this.maxDistance;\n        this.distance = this.maxDistance;\n\n        this.imageLoaded = false;\n        this.image = new Image();\n        this.image.src = \"http://\" + document.domain + ':' + location.port + \"/img/ldf_test.jpg\";\n        var _this = this;\n        this.image.onload = function(){\n            log(\"image loaded\");\n            _this.imageLoaded = true;\n            _this.dirty = true;\n        }\n        this.image.onerror = function(){\n            log(\"Error occured while trying to load \" + _this.src);\n        }\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n\n        this.onConnected = this.onConnected.bind(this);\n        this.onDisconnected = this.onDisconnected.bind(this);\n        this.onMessageReceived = this.onMessageReceived.bind(this);\n        this.onReadingReceived = this.onReadingReceived.bind(this);\n\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"orientationchange\", this.onOrientationChange);\n    }\n\n    get width(){\n        return this.canvas.width;\n    }\n\n    set width(width){\n        this.canvas.width = width;\n    }\n\n    get height(){\n        return this.canvas.height;\n    }\n\n    set height(height){\n        this.canvas.height = height;\n    }\n\n    start(){\n        this.lastUpdateTimestamp = Date.now();\n        this.running = true;\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    stop(){\n        this.running = false;\n    }\n\n    onAnimationFrame(){\n        if(!this.running){\n            return;\n        }\n\n        var elapsedTime = Date.now() - this.lastUpdateTimestamp;\n        this.lastUpdateTimestamp = Date.now();\n\n        elapsedTime /= 1000; // elapsedTime in ms\n\n        this.onUpdate(elapsedTime);\n\n        if(this.dirty){\n            this.onRender();\n            this.dirty = false;\n        }\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    onUpdate(et){\n        var elapsedTimeSincePolledSensor = (Date.now() - this.timeSincePolledDistance); // milliseconds\n\n        if(elapsedTimeSincePolledSensor > (2.0 * 1000)){\n            this.timeSincePolledDistance = Date.now();\n            usService.poll();\n        }\n\n        this.distance += (this.targetDistance - this.distance) * 0.5;\n\n        if(!this.dirty){\n            this.dirty = Math.abs(this.distance-this.targetDistance) > 5.0;\n        }\n    }\n\n    onRender(){\n        this.context.fillStyle = \"white\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n        if(!this.imageLoaded){\n            return;\n        }\n\n        var distance = Math.min(Math.max(this.distance, this.minDistance), this.maxDistance);\n\n        var size = mapRange(distance, this.minDistance, this.maxDistance, 1, 50)  * 0.01;\n        //log(\"distance \" + this.distance + \", target distance \" + this.targetDistance);\n        var w = this.width * size;\n        var h = this.height * size;\n\n        // draw original image to the scaled size\n        this.context.drawImage(this.image, 0, 0, w, h);\n        // then draw that scaled image thumb back to fill canvas\n        // As smoothing is off the result will be pixelated\n        this.context.drawImage(this.canvas, 0, 0, w, h, 0, 0, this.width, this.height);\n    }\n\n    onResize() {\n        this.dirty = true;\n\n        var containers = document.getElementsByClassName(\"canvas_container\");\n        if (containers == null || containers.length == 0) {\n            return;\n        }\n\n        var container = containers[0];\n        this.width = parseInt(window.getComputedStyle(container).getPropertyValue(\"width\"));\n        this.height = parseInt(window.getComputedStyle(container).getPropertyValue(\"height\"));\n    }\n\n    onOrientationChange(){\n        this.onResize();\n    }\n\n    onConnected(){\n\n    }\n\n    onDisconnected(){\n\n    }\n\n    onMessageReceived(messageData){\n\n    }\n\n    onReadingReceived(reading){\n        if(Math.abs(reading-this.targetDistance) > 1.0){\n            this.dirty = true;\n            this.targetDistance = reading;\n            log(\"current distance = \" + reading + \" (updating)\");\n        } else{\n            //log(\"current distance = \" + reading);\n        }\n    }\n}"]}