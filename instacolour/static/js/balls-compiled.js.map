{"version":3,"sources":["balls.js"],"names":[],"mappings":"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","file":"balls-compiled.js","sourcesContent":["/**\n * Created by josh on 27/07/2016.\n */\n\ndocument.addEventListener(\"DOMContentLoaded\", init, false);\n\nvar renderer = null;\nvar serviceAPI = null;\n\nfunction init(){\n    serviceAPI = new ServiceAPI();\n    renderer = new BallRenderer(document.getElementById(\"canvas\"));\n\n    console.log(\"fetching dominate colours\");\n\n    var clusters = getQueryStringParameterByName(\"clusters\");\n    if(clusters == null || clusters.length == 0){\n        clusters = \"-1\";\n    }\n\n    serviceAPI.dominatecolours(clusters, function(api, result){\n        console.log(result);\n        console.log(\"fetched dominate colours\");\n\n        // set colour set\n        if(result != null){\n            var colourClusters = result[\"colour_clusters\"];\n            for(var i=0; i<colourClusters.length; i++){\n                var r = colourClusters[i][\"colour\"][0];\n                var g = colourClusters[i][\"colour\"][1];\n                var b = colourClusters[i][\"colour\"][2];\n                var colour = new Colour(r, g, b, 0.6);\n                renderer.clusters.push(colour);\n                renderer.clustersPercentages.push(colourClusters[i][\"percentage\"]/100.0)\n            }\n        }\n\n        renderer.start();\n    });\n}\n\nclass Ball{\n\n    constructor(position, velocity, colour, radius){\n        this.position = position;\n        this.velocity = velocity;\n        this.colour = colour;\n        this.radius = radius;\n\n        console.log(\"creating ball \" + this.radius);\n\n        //generate the random function that will be used to vary the radius, 9 iterations of subdivision\n\t\tthis.pointList = this.setLinePoints(9);\n        this.phase = Math.random() * Math.PI * 2;\n\n        this.maxRad = this.radius + randomF(-5, 5);\n\t\tthis.minRad = 0.88 * this.maxRad;\n    }\n\n    setLinePoints(iterations) {\n\t\tvar pointList = {};\n\t\tpointList.first = {x:0, y:1};\n\t\tvar lastPoint = {x:1, y:1}\n\t\tvar minY = 1;\n\t\tvar maxY = 1;\n\t\tvar point;\n\t\tvar nextPoint;\n\t\tvar dx, newX, newY;\n\n\t\tpointList.first.next = lastPoint;\n\t\tfor (var i = 0; i < iterations; i++) {\n\t\t\tpoint = pointList.first;\n\t\t\twhile (point.next != null) {\n\t\t\t\tnextPoint = point.next;\n\n\t\t\t\tdx = nextPoint.x - point.x;\n\t\t\t\tnewX = 0.5*(point.x + nextPoint.x);\n\t\t\t\tnewY = 0.5*(point.y + nextPoint.y);\n\t\t\t\tnewY += dx*(Math.random()*2 - 1);\n\n\t\t\t\tvar newPoint = {x:newX, y:newY};\n\n\t\t\t\t//min, max\n\t\t\t\tif (newY < minY) {\n\t\t\t\t\tminY = newY;\n\t\t\t\t}\n\t\t\t\telse if (newY > maxY) {\n\t\t\t\t\tmaxY = newY;\n\t\t\t\t}\n\n\t\t\t\t//put between points\n\t\t\t\tnewPoint.next = nextPoint;\n\t\t\t\tpoint.next = newPoint;\n\n\t\t\t\tpoint = nextPoint;\n\t\t\t}\n\t\t}\n\n\t\t//normalize to values between 0 and 1\n\t\tif (maxY != minY) {\n\t\t\tvar normalizeRate = 1/(maxY - minY);\n\t\t\tpoint = pointList.first;\n\t\t\twhile (point != null) {\n\t\t\t\tpoint.y = normalizeRate*(point.y - minY);\n\t\t\t\tpoint = point.next;\n\t\t\t}\n\t\t}\n\t\t//unlikely that max = min, but could happen if using zero iterations. In this case, set all points equal to 1.\n\t\telse {\n\t\t\tpoint = pointList.first;\n\t\t\twhile (point != null) {\n\t\t\t\tpoint.y = 1;\n\t\t\t\tpoint = point.next;\n\t\t\t}\n\t\t}\n\n\t\treturn pointList;\n\t}\n\n    update(et){\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n    }\n\n    render(canvas, context){\n        var point;\n\t\tvar rad, theta;\n\t\tvar twoPi = 2*Math.PI;\n\t\tvar x0,y0;\n\n\t\tcontext.strokeStyle = this.colour.colourStyle;\n\t\tcontext.lineWidth = 1.01;\n\t\tcontext.fillStyle = this.colour.colourStyle;\n\t\tcontext.beginPath();\n\t\tpoint = this.pointList.first;\n\t\ttheta = this.phase;\n\t\trad = this.minRad + point.y*(this.maxRad - this.minRad);\n\t\tx0 = this.position.x + rad*Math.cos(theta);\n\t\ty0 = this.position.y + rad*Math.sin(theta);\n\t\tcontext.lineTo(x0, y0);\n\t\twhile (point.next != null) {\n\t\t\tpoint = point.next;\n\t\t\ttheta = twoPi*point.x + this.phase;\n\t\t\trad = this.minRad + point.y*(this.maxRad - this.minRad);\n\t\t\tx0 = this.position.x + rad*Math.cos(theta);\n\t\t\ty0 = this.position.y + rad*Math.sin(theta);\n\t\t\tcontext.lineTo(x0, y0);\n\t\t}\n\t\tcontext.stroke();\n\t\tcontext.fill();\n    }\n\n    collidesWith(other){\n        var dis = Vec2.distance(this.position, other.position);\n        return dis < (this.maxRad + other.maxRad);\n    }\n\n}\n\nclass BallRenderer{\n\n    constructor(canvas){\n        this.canvas = canvas;\n        this.context = this.canvas.getContext(\"2d\");\n\n        this.running = false;\n        this.startTimestamp = 0;\n        this.lastUpdateTimestamp = 0;\n\n        this.onAnimationFrame = this.onAnimationFrame.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onOrientationChange = this.onOrientationChange.bind(this);\n\n        window.addEventListener(\"resize\", this.onResize);\n        window.addEventListener(\"orientationchange\", this.onOrientationChange);\n\n        this.clusters = [];\n        this.clustersPercentages = [];\n\n        this.balls = [];\n\n        this.onResize();\n    }\n\n    start(){\n        if(this.running){\n            return;\n        }\n\n        this.startTimestamp = Date.now();\n\n        console.log(\"starting\");\n\n        this.initScene();\n\n        this.lastUpdateTimestamp = Date.now();\n        this.running = true;\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    stop(){\n        this.running = false;\n    }\n\n    initScene(){\n        var paddingX = 20;\n        var paddingY = 20;\n\n        var maxRadius = 200.0;\n        var minRadius = 50.0;\n\n        this.balls = [];\n        \n        var ballCount = this.clusters.length;\n\n        for(var i=0; i<ballCount; i++){\n            var colour = this.clusters[i].createCopy();\n\n            var radius = minRadius + (maxRadius - minRadius) * this.clustersPercentages[i];\n\n            var position = new Vec2(\n                randomI(paddingX, this.canvas.width-paddingX), randomI(paddingY, this.canvas.height-paddingY));\n\n            // make sure if doesn't collide with any other balls previously created\n            var collisionDetected = true;\n            while(collisionDetected){\n                collisionDetected = false;\n\n                for(var j=0; j<i; j++){\n                    var ball = this.balls[j];\n                    var dis = Vec2.distance(position, ball.position);\n                    collisionDetected = dis < (radius + ball.maxRad);\n                    if(collisionDetected){\n                        position.set(randomI(paddingX, this.canvas.width-paddingX), randomI(paddingY, this.canvas.height-paddingY));\n                        break;\n                    }\n                }\n            }\n\n            var maxVelocity = 0.2;\n\n            var velocity = new Vec2(randomF(-maxVelocity, maxVelocity), randomF(-maxVelocity, maxVelocity));\n            this.balls.push(new Ball(position, velocity, colour, radius));\n        }\n    }\n\n    onAnimationFrame(){\n        if(!this.running){\n            return;\n        }\n\n        var elapsedTime = Date.now() - this.lastUpdateTimestamp;\n        this.lastUpdateTimestamp = Date.now();\n\n        elapsedTime /= 1000; // elapsedTime in ms\n\n        this.onUpdate(elapsedTime);\n        this.onRender();\n\n        window.requestAnimationFrame(this.onAnimationFrame);\n    }\n\n    onUpdate(et){\n        var canvas = this.canvas;\n\n        this.balls.forEach(function(ball, index, array){\n            ball.update(et);\n\n            // collides with boundary?\n            if(ball.position.x - ball.maxRad < 0){\n                ball.velocity.x = -ball.velocity.x;\n                ball.position.x = ball.maxRad;\n            } else if(ball.position.x + ball.maxRad > canvas.width){\n                ball.velocity.x = -ball.velocity.x;\n                ball.position.x = canvas.width - ball.maxRad;\n            }\n\n            if(ball.position.y - ball.maxRad < 0){\n                ball.velocity.y = -ball.velocity.y;\n                ball.position.y = ball.maxRad;\n            } else if(ball.position.y + ball.maxRad > canvas.height){\n                ball.velocity.y = -ball.velocity.y;\n                ball.position.y = canvas.height - ball.maxRad;\n            }\n\n        });\n\n        // collision detection and response\n        for(var i=0; i<this.balls.length; i++){\n            var ball = this.balls[i];\n            for(var j=i+1; j<this.balls.length; j++){\n                var otherBall = this.balls[j];\n                if(ball.collidesWith(otherBall)){\n                    // direction\n                    var direction = Vec2.sub(ball.position, otherBall.position).normalize();\n                    var overlap = (ball.maxRad + otherBall.maxRad) - Vec2.distance(ball.position, otherBall.position);\n\n                    // console.log(\" \" + direction.x + \",\" + direction.y + \", \" + overlap);\n\n                    // if direction.x < 0 (otherBall is to the right of ball)\n                    // if direction.y < 0 (otherBall is below ball)\n\n                    ball.position.x -= direction.x * (overlap/2.0);\n                    otherBall.position.x += direction.x * (overlap/2.0);\n\n                    ball.position.y += direction.y * (overlap/2.0);\n                    otherBall.position.y -= direction.y * (overlap/2.0);\n\n                    ball.velocity.x = Math.sign(direction.x) * Math.abs(ball.velocity.x);\n                    otherBall.velocity.x = Math.sign(-direction.x) * Math.abs(otherBall.velocity.x);\n\n                    ball.velocity.y = Math.sign(direction.y) * Math.abs(ball.velocity.y);\n                    otherBall.velocity.y = Math.sign(-direction.y) * Math.abs(otherBall.velocity.y);\n                }\n            }\n        }\n    }\n\n    clearCanvas(){\n        this.context.fillStyle = \"#FFFFFF\";\n        this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    onRender(){\n        var canvas = this.canvas;\n        var context = this.context;\n\n        this.clearCanvas();\n\n        this.balls.forEach(function(ball, index, array){\n            ball.render(canvas, context);\n        });\n\n        this.drawPalette(canvas, context);\n    }\n\n    drawPalette(canvas, context){\n        var width = Math.min(canvas.width, canvas.height) * 0.05;\n        var padding = width * 0.05;\n        var x = canvas.width - ((width + padding) * (this.clusters.length + 1));\n        var y = canvas.height - width - padding;\n\n        for(var i=0; i<this.clusters.length; i++){\n            context.fillStyle = this.clusters[i].colourStyle;\n            context.fillRect(x, y, width, width);\n            x += (width + padding);\n        }\n\n    }\n\n    onOrientationChange(){\n        this.onResize();\n    }\n\n    onResize(){\n        this.canvas.width = document.width | document.body.clientWidth;\n        this.canvas.height = document.height | document.body.clientHeight;\n\n        if(this.running){\n            this.initScene();\n        }\n    }\n}\n\nclass ServiceAPI{\n\n    constructor(){\n        this._rootUrl = \"http://instacolour.herokuapp.com\";\n        this._busy = false;\n    }\n\n    get isBusy(){\n        return this._busy;\n    }\n\n    dominatecolours(clusters, handler){\n        this._busy = true;\n\n        var _this = this;\n\n        var xhr = new XMLHttpRequest();\n        xhr.onload = function(e) {\n            _this._busy = false;\n            var jsonObj = JSON.parse(xhr.response)\n            if(handler != null){\n                handler(_this, jsonObj);\n            }\n        }\n        xhr.onerror = function(e){\n            _this._busy = false;\n            if(handler != null) {\n                handler(_this, null);\n            }\n        }\n\n        console.log(\"Calling \" + this._rootUrl + \"/api/dominatecolours?clusters=\" + clusters);\n\n        xhr.open(\"GET\", this._rootUrl + \"/api/dominatecolours?clusters=\" + clusters, true);\n        xhr.send();\n    }\n}\n\nclass Colour{\n\n    constructor(r=0, g=0, b=0, a=0.4){\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n\n    }\n\n    set(r, g, b, a=0.4){\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    copy(other){\n        this.r = other.r;\n        this.g = other.g;\n        this.b = other.b;\n        this.a = other.a;\n    }\n\n    createCopy(){\n        return new Colour(this.r, this.g, this.b, this.a);\n    }\n\n    get colourStyle(){\n        return \"rgba(\" + Math.floor(this.r) + \", \" + Math.floor(this.g) + \", \" + Math.floor(this.b) + \",\" + this.a + \")\";\n    }\n\n    static lerp(source, target, t){\n        var dr = source.r - target.r;\n        var dg = source.g - target.g;\n        var db = source.b - target.b;\n        var da = source.a - target.a;\n\n        return new Colour(\n            source.r + t * dr,\n            source.g + t * dg,\n            source.b + t * db,\n            source.a + t * da\n        );\n    }\n}\n\nclass Vec2{\n\n    constructor(x=0, y=0){\n        this.x = x;\n        this.y = y;\n    }\n\n    add(other){\n        this.x += other.x;\n        this.y += other.y;\n    }\n\n    mul(s){\n        this.x *= s;\n        this.y *= s;\n    }\n\n    set(x, y){\n        this.x = x;\n        this.y = y;\n    }\n\n    normalize(){\n        var length = this.length;\n\n        if(length == 0){\n            this.x = 0;\n            this.y = 0;\n        } else{\n            this.x /= length;\n            this.y /= length;\n        }\n\n        return this;\n    }\n\n    get length(){\n        return Math.sqrt(this.x * this.x + this.y * this.y);\n    }\n\n    copy(other){\n        this.x = other.x;\n        this.y = other.y;\n    }\n\n    createCopy(){\n        return new Vec2(this.x, this.y);\n    }\n\n    static distance (v1, v2) {\n        var dx = v1.x - v2.x;\n        var dy = v1.y - v2.y;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    static add(v1, v2){\n        return new Vec2(v1.x + v2.x, v1.y + v2.y);\n    }\n\n    static sub(v1, v2){\n        return new Vec2(v1.x - v2.x, v1.y - v2.y);\n    }\n\n    static mul(v1, v2){\n        return new Vec2(v1.x * v2.x, v1.y * v2.y);\n    }\n\n    static lerp(sv, tv, t){\n        var dx = sv.x - tv.x;\n        var dy = sv.y - tv.y;\n\n        return new Vec2(sv.x + t * dx, sv.y + t * dy);\n    }\n}\n\nfunction getQueryStringParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nfunction randomF(min, max){\n    return (Math.random() * (max-min)) + min;\n}\n\nfunction randomI(min, max){\n    return Math.floor((Math.random() * (max-min)) + min);\n}\n\nfunction constrain(val, min, max){\n    return Math.min(Math.max(val, min), max);\n}\n\nfunction mapRange(value, low1, high1, low2, high2) {\n    return low2 + (high2 - low2) * (value - low1) / (high1 - low1);\n}"]}